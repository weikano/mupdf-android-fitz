apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

//group = 'com.artifex.mupdf'
//version = '1.23.7'
group = "com.szzy.ireader.ink.mupdf"
version = "1.0.4"


Properties p = new Properties()
try(FileReader reader = new FileReader(new File("local.properties"))) {
	p.load(reader);
}
def AUTH_USER = p.get("AUTH_USER")
def AUTH_PWD = p.get("AUTH_PWD")
def REPO_URL = p.get("REPO_URL")
def TARGET = p.get("TARGET")
def MAVEN_REPO_URL = "${REPO_URL}/${TARGET}"

println("===============================")
println(AUTH_USER)
println(AUTH_PWD)
println(REPO_URL)
println(TARGET)
println(MAVEN_REPO_URL)
println("===============================")


buildscript {
	repositories {
		if (project.hasProperty('MAVEN_REPO')) {
			maven { url MAVEN_REPO }
		} else {
			maven { url "file://${System.properties['user.home']}/MAVEN" }
		}
		google()
		mavenCentral()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:7.2.2'
	}
}

allprojects {
	repositories {
		if (project.hasProperty('MAVEN_REPO')) {
			maven { url MAVEN_REPO }
		} else {
			maven { url "file://${System.properties['user.home']}/MAVEN" }
		}
		google()
		mavenCentral()
	}
}

android {
	compileSdkVersion 33

	defaultConfig {
		minSdkVersion 21
		targetSdkVersion 33

		externalNativeBuild.ndkBuild.arguments '-j4'

		// Set ABI_FILTERS in your gradle.properties file
		if (project.hasProperty('ABI_FILTERS')) {
			ndk.abiFilters = []
			ndk.abiFilters.addAll(ABI_FILTERS.split(',').collect{it as String})
		}
	}

	sourceSets {
		main {
			manifest.srcFile 'AndroidManifest.xml'
			java.srcDirs 'libmupdf/platform/java/src'
		}
	}

	externalNativeBuild {
		ndkBuild.path 'libmupdf/platform/java/Android.mk'
	}
}

project.afterEvaluate {
	publishing {
		publications {
			release(MavenPublication) {
				artifactId 'fitz'
				artifact(bundleReleaseAar)

				pom {
					name = 'fitz'
//					url = 'http://www.mupdf.com'
//					licenses {
//						license {
//							name = 'GNU Affero General Public License'
//							url = 'https://www.gnu.org/licenses/agpl-3.0.html'
//						}
//					}
				}
				pom.withXml {
					final dependenciesNode = asNode().appendNode('dependencies')
					configurations.implementation.allDependencies.each {
						def dependencyNode = dependenciesNode.appendNode('dependency')
						dependencyNode.appendNode('groupId', it.group)
						dependencyNode.appendNode('artifactId', it.name)
						dependencyNode.appendNode('version', it.version)
					}
				}
			}
		}
		repositories {
			maven {
				allowInsecureProtocol = true
				credentials {
					username = "${AUTH_USER}"
					password = "${AUTH_PWD}"
				}
				//url "$buildDir/repo"
				url MAVEN_REPO_URL
//				name 'Local'
//				if (project.hasProperty('MAVEN_REPO')) {
//					url = MAVEN_REPO
//				} else {
//					url = "file://${System.properties['user.home']}/MAVEN"
//				}
			}
		}
	}
}
